#! /usr/bin/env python3
"""
A command line tool for creating and compiling TeX files

Type 'autotex' without any options or arguments for help
"""
from optparse import OptionParser
import subprocess

class Option: # Careful: there's an optparse class called 'Object'

    def __init__(self,_short,_long,_help):

        self.args    = [_short,_long]
        self.kwargs  = {'help' : _help}

    def __str__(self):
        print('\t' + '\t'.join(self.args) + '\t' + kwargs['help'])

def main():

    # TODO create a "just-BibTex" option
    options = [
        Option("-a", "--all",  "Compile all TeX files in the directory"),
        Option("-f", "--full", "Full compile with BibTeX"),
        Option("-h", "--help", "Displays a help message"),
        Option("-i", "--hide", "Do not display .pdf after compiling"),
        Option("-n", "--new",  "Creates a TeX file"),
        Option("-r", "--refs", "Run pdflatex twice to resolve references"),
    ]

    # TODO customize this
    article_template = ''
    article_template += '\\documentclass{article}\n'
    article_template += '\\begin{document}\n\n'
    article_template += '\\end{document}'

    def compiler(fname):

        """
        Calls pdflatex and bibtex
        
        Parameters
        ----------
        fname : str
            Name of TeX file to compile
        """
        pass

    # parse input
    parser = OptionParser()
    for option in options:
        parser.add_option(*option.args,**option.kwargs)
    (cl_opts,cl_args) = parser.parse_args()
    print(cl_opts)
    print(cl_args)

    if not cl_args and not cl_opts:
        print('Options:')
        for option in options:
            print(option)
        print('Arguments:\n\t<filename1.tex> <filename2.tex> ...')
    else:
        if not cl_args:
            tex_files = [f for f in os.listdir() if f.endswith('.tex')]
            if not tex_files:
                raise Exception('There are no TeX files in this directory!')
            elif len(tex_files) > 1:
                print('There are more than one TeX file in this directory.')
                print('Which one(s) would you like to compile?')
                for f in tex_files:
                    tex_drops.append(input('Compile ' + f + '? (y/N)'))
            else:
                tex_files = []
            for tex_file in tex_files:
                subprocess.run(['pdflatex',tex_file])
            
        print(tex_files)
main()
